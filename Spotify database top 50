# I downloaded Spotify data from Kaggle.
# Created a table on SQLite to hold all of the data
# I was able to perform a couple analytical tests on the data as well 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#I had to insert the .csv into the table
#Then finally I decided to look into the data available 

#Determined the average popularity and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Top_15 by artists by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 15

#Top_5 artists by tempo
SELECT artist_name as artist, popularity, tempo 
FROM BIT_DB.Spotifydata 
WHERE tempo > 115 AND popularity > 85
GROUP BY tempo LIMIT 5;

#Amount of Minutes it would take to listen to all 50 songs
SELECT SUM(duration_ms/1000)/60 as Minutes FROM BIT_DB.Spotifydata;

#Average length of song
SELECT avg(duration_ms/1000) AS Seconds FROM BIT_DB.Spotifydata:

